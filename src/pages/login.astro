---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <main class="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex items-center justify-center p-4 relative overflow-hidden">
    <!-- Animated background shapes -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-blue-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"></div>
      <div class="absolute top-40 left-40 w-80 h-80 bg-indigo-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000"></div>
    </div>

    <!-- Login container -->
    <div class="relative z-10 w-full max-w-md">
      <!-- Logo/Header area -->
      <div class="text-center mb-8 animate-fade-in-down">
        <div class="mx-auto w-20 h-20 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center mb-4 shadow-lg animate-pulse-slow">
          <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <h1 class="text-3xl font-bold text-gray-800 mb-2">Dashboard Viewer</h1>
        <p class="text-gray-600">Bienvenido de vuelta</p>
      </div>

      <!-- Login card -->
      <div class="bg-white/80 backdrop-blur-lg rounded-2xl shadow-2xl p-8 border border-white/20 animate-fade-in-up">
        <form id="login-form" class="space-y-6">
          <!-- Username field -->
          <div class="space-y-2">
            <label for="username" class="flex text-sm font-medium text-gray-700 items-center gap-2">
              <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              Usuario
            </label>
            <div class="relative">
              <input
                type="text"
                id="username"
                name="username"
                required
                class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-300 pl-12 bg-white/50"
                placeholder="Ingresa tu usuario"
              />
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
              </div>
            </div>
          </div>
          
          <!-- Password field -->
          <div class="space-y-2">
            <label for="password" class="flex text-sm font-medium text-gray-700 items-center gap-2">
              <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
              </svg>
              Contraseña
            </label>
            <div class="relative">
              <input
                type="password"
                id="password"
                name="password"
                required
                class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-300 pl-12 pr-12 bg-white/50"
                placeholder="Ingresa tu contraseña"
              />
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                </svg>
              </div>
              <button
                type="button"
                id="toggle-password"
                class="absolute inset-y-0 right-0 pr-3 flex items-center"
              >
                <svg id="eye-open" class="w-5 h-5 text-gray-400 hover:text-gray-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
                <svg id="eye-closed" class="w-5 h-5 text-gray-400 hover:text-gray-600 transition-colors hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
                </svg>
              </button>
            </div>
          </div>
          
          <!-- Submit button -->
          <button
            type="submit"
            id="submit-btn"
            class="w-full py-3 px-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-300 transform hover:scale-105 active:scale-95 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            <span id="btn-text" class="flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
              </svg>
              Iniciar Sesión
            </span>
            <div id="loading-spinner" class="hidden">
              <div class="flex items-center justify-center gap-2">
                <div class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                Iniciando sesión...
              </div>
            </div>
          </button>
        </form>
        
        <!-- Error message -->
        <div id="error-message" class="mt-4 p-4 bg-red-50 border-l-4 border-red-500 rounded-r-lg text-red-700 text-sm hidden animate-shake">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span id="error-text"></span>
          </div>
        </div>

        <!-- Success message -->
        <div id="success-message" class="mt-4 p-4 bg-green-50 border-l-4 border-green-500 rounded-r-lg text-green-700 text-sm hidden animate-bounce-in">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            ¡Login exitoso! Redirigiendo...
          </div>
        </div>
      </div>

      <!-- Footer -->
      <div class="text-center mt-8 text-gray-500 text-sm animate-fade-in">
        <p>Dashboard Viewer © 2025</p>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { db } from '../lib/firebase';
  import { collection, query, where, getDocs } from 'firebase/firestore';
  
  const form = document.getElementById('login-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message') as HTMLElement;
  const errorText = document.getElementById('error-text') as HTMLElement;
  const successMessage = document.getElementById('success-message') as HTMLElement;
  const submitButton = document.getElementById('submit-btn') as HTMLButtonElement;
  const btnText = document.getElementById('btn-text') as HTMLElement;
  const loadingSpinner = document.getElementById('loading-spinner') as HTMLElement;
  const togglePassword = document.getElementById('toggle-password') as HTMLButtonElement;
  const passwordInput = document.getElementById('password') as HTMLInputElement;
  const eyeOpen = document.getElementById('eye-open') as HTMLElement;
  const eyeClosed = document.getElementById('eye-closed') as HTMLElement;
  
  // Password visibility toggle
  togglePassword?.addEventListener('click', () => {
    const isPassword = passwordInput.type === 'password';
    passwordInput.type = isPassword ? 'text' : 'password';
    
    if (isPassword) {
      eyeOpen.classList.add('hidden');
      eyeClosed.classList.remove('hidden');
    } else {
      eyeOpen.classList.remove('hidden');
      eyeClosed.classList.add('hidden');
    }
  });
  
  // Input animations
  const inputs = document.querySelectorAll('input');
  inputs.forEach(input => {
    input.addEventListener('focus', () => {
      input.parentElement?.classList.add('scale-105');
    });
    
    input.addEventListener('blur', () => {
      input.parentElement?.classList.remove('scale-105');
    });
  });
  
  // Functions
  function showError(message: string) {
    errorText.textContent = message;
    errorMessage.classList.remove('hidden');
    errorMessage.classList.add('animate-shake');
    successMessage.classList.add('hidden');
    
    // Remove shake animation after it completes
    setTimeout(() => {
      errorMessage.classList.remove('animate-shake');
    }, 500);
  }
  
  function hideError() {
    errorMessage.classList.add('hidden');
  }
  
  function showSuccess() {
    successMessage.classList.remove('hidden');
    successMessage.classList.add('animate-bounce-in');
    errorMessage.classList.add('hidden');
  }
  
  function setLoading(loading: boolean) {
    submitButton.disabled = loading;
    
    if (loading) {
      btnText.classList.add('hidden');
      loadingSpinner.classList.remove('hidden');
      submitButton.classList.add('cursor-not-allowed');
    } else {
      btnText.classList.remove('hidden');
      loadingSpinner.classList.add('hidden');
      submitButton.classList.remove('cursor-not-allowed');
    }
  }
  
  // Form submission
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const username = formData.get('username') as string;
    const password = formData.get('password') as string;
    
    // Basic validation
    if (!username || !password) {
      showError('Por favor, completa todos los campos');
      return;
    }
    
    if (username.length < 3) {
      showError('El usuario debe tener al menos 3 caracteres');
      return;
    }
    
    if (password.length < 4) {
      showError('La contraseña debe tener al menos 4 caracteres');
      return;
    }
    
    try {
      hideError();
      setLoading(true);
      
      console.log('Intentando iniciar sesión con usuario:', username);
      
      // Add a small delay for better UX
      await new Promise(resolve => setTimeout(resolve, 800));
      
      const q = query(
        collection(db, 'userdashboard'),
        where('username', '==', username),
        where('pass', '==', password)
      );
      
      const querySnapshot = await getDocs(q);
      
      if (!querySnapshot.empty) {
        const userData = querySnapshot.docs[0].data();
        const userId = querySnapshot.docs[0].id;
        
        console.log('Login exitoso para usuario:', username);
        console.log('Datos del usuario:', userData);
        
        // Show success message
        showSuccess();
        
        // Set session data
        sessionStorage.setItem('authenticated', 'true');
        sessionStorage.setItem('username', username);
        sessionStorage.setItem('userId', userId);
        
        // Set cookies
        document.cookie = 'authenticated=true; path=/; max-age=86400; SameSite=Lax';
        document.cookie = `username=${encodeURIComponent(username)}; path=/; max-age=86400; SameSite=Lax`;
        
        console.log('Cookies establecidas, redirigiendo...');
        
        // Redirect with animation delay
        setTimeout(() => {
          window.location.href = '/';
        }, 1500);
        
      } else {
        console.log('Usuario no encontrado o credenciales incorrectas');
        showError('Usuario o contraseña incorrectos');
      }
    } catch (error) {
      console.error('Error during login:', error);
      showError('Error al conectar con el servidor. Verifica tu conexión a internet.');
    } finally {
      setLoading(false);
    }
  });
  
  // Check if already authenticated
  document.addEventListener('DOMContentLoaded', () => {
    const cookies = document.cookie;
    const sessionAuth = sessionStorage.getItem('authenticated');
    
    if (cookies.includes('authenticated=true') || sessionAuth === 'true') {
      console.log('Usuario ya autenticado, redirigiendo...');
      showSuccess();
      setTimeout(() => {
        window.location.href = '/';
      }, 1000);
    }
  });
  
  // Add some interactive effects
  const card = document.querySelector('.bg-white\\/80');
  card?.addEventListener('mouseenter', () => {
    card.classList.add('scale-105');
  });
  
  card?.addEventListener('mouseleave', () => {
    card.classList.remove('scale-105');
  });
</script>